# 题目描述
# UNIX系统下有一个行编辑器ed，它每次只对一行文本做删除一个字符、插入一个字符或替换一个字符三种操作。例如某一行的内容是“ABC”，经过把第二个字符替换成“D”、删除第一个字符、末尾插入一个字符“B”，这三步操作后，内容就变成了“DCB”。即“ABC”变成“DCB”需要经过3步操作，我们称它们的编辑距离为3。

# 现在给你两个任意字符串（不包含空格），请帮忙计算它们的最短编辑距离。
# 输入描述:
# 输入包含多组数据。

# 每组数据包含两个字符串m和n，它们仅包含字母，并且长度不超过1024。
# 输出描述:
# 对应每组输入，输出最短编辑距离。
# 示例1
# 输入
# 复制
# ABC CBCD
# ABC DCB
# 输出
# 复制
# 2
# 3


#----------------------------------------------------------------
#----------------------------------------------------------------


def solution(s1, s2):
    l1 = len(s1)+1
    l2 = len(s2)+1
 
    dp = [[0 for j in range(l2)] for i in range(l1)]
 
    for i in range(0, l1):
        for j in range(0, l2):
            if i == 0:
                dp[i][j] = j
            elif j == 0:
                dp[i][j] = i
             
            elif s1[i-1] == s2[j-1]:
                dp[i][j] = dp[i-1][j-1]
            else:
                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1
    return dp[-1][-1]
 
import sys
tmp = sys.stdin.readline().strip().split()
s1 = tmp[0]
s2 = tmp[1]
print(solution(s1,s2))


