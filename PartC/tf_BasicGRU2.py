import tensorflow as tf
X = tf.random_normal(shape=[3, 5, 6], dtype=tf.float32)

X = tf.reshape(X, [-1, 5, 6])
cell = tf.nn.rnn_cell.GRUCell(10)
init_state = cell.zero_state(3, dtype=tf.float32)
output, state = tf.nn.dynamic_rnn(cell, X, initial_state=init_state, time_major=False)
with tf.Session() as sess:
    sess.run(tf.initialize_all_variables())
    print("输出的结果为：%s\n"%("output"))
    print(output.shape)
    print(sess.run(output))
    print("输出的状态为 %s\n"%("state"))
    print(state.shape)
    print(sess.run(state))


"""
输出的结果为：output

(3, 5, 10)
[[[-0.2552418   0.3936797  -0.05129976 -0.1044802   0.16362391
    0.12437591  0.01752294 -0.07194158  0.0482638   0.05488705]
  [-0.12499961  0.40883768 -0.27890232 -0.26692867  0.16756494
    0.34968075 -0.28232846 -0.01590867 -0.01410729 -0.15110204]
  [ 0.43761247  0.39267385 -0.34988636 -0.13787012  0.02437147
   -0.22724557 -0.55655456  0.00608596 -0.20329121 -0.30440333]
  [ 0.6747929   0.40098232 -0.48011377 -0.24643418 -0.05896038
    0.25277025 -0.72655463  0.07435299 -0.30554503 -0.29448745]
  [ 0.7101681   0.36581874 -0.51645076 -0.25072625 -0.09750243
   -0.05332147 -0.39116412  0.01994979 -0.42748988  0.13897175]]

 [[-0.15612124 -0.00926409  0.09716897  0.31731036 -0.10274881
   -0.10740867 -0.13636117  0.03797916  0.06087624 -0.15515782]
  [-0.12151591 -0.04099     0.08547354  0.19995674 -0.12310994
   -0.02546442 -0.25612378  0.08715378  0.0858195  -0.17663558]
  [-0.01641349 -0.06029886 -0.06731733  0.15127288 -0.13806814
   -0.05850569 -0.31076187  0.23718688 -0.00732403 -0.2273743 ]
  [ 0.00207143 -0.17315462  0.00532413  0.27137953 -0.16259693
   -0.19320627 -0.14625376  0.07009225  0.18252124  0.16472137]
  [-0.13512148 -0.43898767  0.20590475 -0.14901702 -0.20318063
   -0.20591515 -0.07591729  0.13939348  0.17554905  0.03933573]]

 [[ 0.02586582  0.05108296  0.02573941  0.19816864  0.02547771
   -0.21446045  0.13358371 -0.05507272  0.12620348  0.23166338]
  [ 0.10943893 -0.02079203 -0.20425399 -0.02731389  0.01550499
   -0.04386272 -0.05952382  0.06376076  0.0347423   0.08401252]
  [-0.02928755  0.14334896 -0.32097387 -0.14749914  0.02769828
    0.15406144 -0.35378048  0.19859536  0.01072324 -0.15870629]
  [-0.08557671 -0.11304683 -0.14820199 -0.3093673   0.12475469
    0.21965307 -0.23479956  0.21290974  0.11321852  0.0694969 ]
  [-0.22707939  0.02741933 -0.12489721 -0.32682347  0.14467825
    0.3328352  -0.23524219  0.15471914  0.12693484  0.04573249]]]
输出的状态为 state

(3, 10)
[[ 0.22192657  0.03740061 -0.37345475 -0.23175044 -0.18529405  0.35516047
  -0.45074183  0.37936094 -0.2499513   0.00541256]
 [ 0.03897488 -0.46274877  0.26393586  0.13644229 -0.01395226 -0.13250796
  -0.09244985 -0.1712375   0.34209082  0.10412971]
 [ 0.23113315  0.17321624 -0.527053   -0.11510901 -0.03587791  0.28661716
  -0.2960089   0.29475945 -0.4227366  -0.03686007]]

"""