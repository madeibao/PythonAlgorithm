import tensorflow as tf
X = tf.constant([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], dtype=tf.float32)

# 也可以是一个二维的矩阵，求softmax


x2 = tf.constant([[2, 3, 4, 5, 6],
                  [7, 8, 9, 10, 11],
                  [2, 4, 9, 4, 5],
                  [2, 1, 4, 7, 2],
                  [5, 9, 1, 4, 7]], dtype=tf.float32)


with tf.Session() as sess:
    print(sess.run(tf.nn.softmax(X)))
    print(sess.run(tf.nn.softmax(x2)))



"""
[7.8013414e-05 2.1206246e-04 5.7644554e-04 1.5669415e-03 4.2593884e-03
 1.1578218e-02 3.1472858e-02 8.5552104e-02 2.3255473e-01 6.3214928e-01]



结果如下：
 [[1.1656231e-02 3.1684920e-02 8.6128540e-02 2.3412165e-01 6.3640863e-01]
  [1.1656231e-02 3.1684920e-02 8.6128540e-02 2.3412165e-01 6.3640863e-01]
  [8.8300469e-04 6.5245712e-03 9.6833223e-01 6.5245712e-03 1.7735625e-02]
  [6.3223080e-03 2.3258473e-03 4.6715889e-02 9.3831372e-01 6.3223080e-03]
  [1.5779490e-02 8.6153096e-01 2.8901143e-04 5.8049499e-03 1.1659554e-01]]

"""

# tf.nn.softmax 默认的是在行上进行归一化的操作。如果不指定维度的话。默认的是axis=-1
# 如果指定的条件下仍然可以采用列的方式来进行归一化的操作。

import tensorflow as tf
input = tf.constant(5, dtype=tf.float32, shape=[2, 3])

with tf.Session() as sess:
    print(sess.run(input))
    print(sess.run(tf.nn.softmax(input, axis=-1)))   # 行   按照每一行的元素内容归一化。
    print(sess.run(tf.nn.softmax(input, axis=0)))    # 列   按照每一列的元素内容进行归一化的操作。



[[5. 5. 5.]
 [5. 5. 5.]]
[[0.33333334 0.33333334 0.33333334]
 [0.33333334 0.33333334 0.33333334]]


#-------------------------------------------------------------------------------


[[5. 5. 5.]
 [5. 5. 5.]]
[[0.5 0.5 0.5]
 [0.5 0.5 0.5]]