a1 = [[1, 2, 3],
      [4, 5, 6]]
b1 = tf.transpose(a1, perm=[1, 0])

a2 = [[[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]],
      [[10, 11, 12],
       [13, 14, 15],
       [16, 17, 18]]]
b2 = tf.transpose(a2, perm=[0, 2, 1])

a3 = [[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]]],
      [[[19, 20, 21], [22, 23, 24], [25, 26, 27]], [[28, 29, 30], [31, 32, 33], [34, 35, 36]]]]

b3 = tf.transpose(a3, perm=[0, 3, 1, 2])

with tf.Session() as sess:
    print(sess.run(b1))
    print("\n")
    print(sess.run(b2))
    print("\n")
    print(sess.run(b3))



"""

a:数组
perm:控制转置的操作,以perm = [0,1,2] 3个维度的数组为例, 0–代表的是最外层的一维, 1–代表外向内数第二维, 2–代表最内层的一维,
这种perm是默认的值.如果换成[1,0,2],就是把最里面层的两维进行转置，比如原来是2乘3乘4，经过[1,0,2]的转置维度将会变成3乘2乘4

结果：

[[1 4]

 [2 5]

 [3 6]]

-------------

[[[1  4  7]

  [2  5  8]

  [3  6  9]]



[[10 13 16]

 [11 14 17]

 [12 15 18]]]

----------------

[[[[1  4  7]

   [10 13 16]]

 [[2  5  8]

    [11 14 17]]



[[3  6  9]

 [12 15 18]]]





[[[19 22 25]

  [28 31 34]]

  [[20 23 26]

  [29 32 35]]

  [[21 24 27]

   [30 33 36]]]]


""" 

